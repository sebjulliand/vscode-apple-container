import { describe, expect, it, vi } from "vitest";
import { CLI, ContainerCLI } from "../core/cli";

describe("CLI", { concurrent: true }, () => {
  it("list images", () => {
    vi.fn(CLI.exec).mockImplementationOnce((command) => ({
      code: 0,
      output: `NAME             TAG            INDEX DIGEST                 OS     ARCH   VARIANT  SIZE      CREATED                         MANIFEST DIGEST
jenkins/jenkins  alpine         a2c0c92ff93b32db59e20f39...  linux  arm64           204,8 MB  2025-09-17T10:25:13.77061177Z   ae98e5c2e38cecb7eb908130...
nginx            alpine         42a516af16b852e33b7682d5...  linux  arm64  v8       22,9 MB   2025-08-13T16:34:01Z            77d740efa8f9c4753f2a7212...
sonatype/nexus3  3.84.1-alpine  5340abce23da039729055b7f...  linux  arm64           428,2 MB  2025-09-17T15:23:06.156729566Z  0e6e75613e288a90941a081e...`
    }));
    const images = ContainerCLI.listImages();
    expect(images.length).toBe(3);
  });

  it("list images", () => {
    vi.fn(CLI.exec).mockImplementationOnce((command) => ({
      code: 0,
      output: '[{"index":{"digest":"sha256:42a516af16b852e33b7682d5ef8acbd5d13fe08fecadc7ed98605ba5e3b26ab8","mediaType":"application\/vnd.oci.image.index.v1+json","size":10333},"variants":[{"config":{"variant":"v8","os":"linux","rootfs":{"diff_ids":["sha256:0b83d017db6efafadf6b3f18d087d2ce1d67d8f0e927dc7254b0ad088074cd3a","sha256:488c372ba3256e07c09fa9b9510c4f24baeb7352b68006ac328bef4d32d299d8","sha256:d634c83098bad4821d491c5653e71b0ea0495cd5a7e928ad5259b0bb231aeebd","sha256:14856caa7722df4d3603e97a5b3de9cdadeb7f2f2ab8d98b5c51f0274ad6da2c","sha256:825ba0c5d54f44d970dff1caeb5ee4407dcf68ae00272a0a255534f05de8bef3","sha256:cdedf5a93bd73ca4de0fead6c4ac445a2fbec78dd6545e4fdf07488a548bcac4","sha256:5eb2b5468732ecb9fccb799d91f630da80fcd8093971350b619f31f841b8ea0d","sha256:52525aad6e4f256604bb6568ccc6c218142e37f993a3caf3c4cbe9947944bdb2"],"type":"layers"},"created":"2025-08-13T16:34:01Z","architecture":"arm64","config":{"StopSignal":"SIGQUIT","Entrypoint":["\/docker-entrypoint.sh"],"Labels":{"maintainer":"NGINX Docker Maintainers <docker-maint@nginx.com>"},"Env":["PATH=\/usr\/local\/sbin:\/usr\/local\/bin:\/usr\/sbin:\/usr\/bin:\/sbin:\/bin","NGINX_VERSION=1.29.1","PKG_RELEASE=1","DYNPKG_RELEASE=1","NJS_VERSION=0.9.1","NJS_RELEASE=1"],"Cmd":["nginx","-g","daemon off;"],"WorkingDir":"\/"},"history":[{"comment":"buildkit.dockerfile.v0","created":"2025-07-15T11:01:16Z","created_by":"ADD alpine-minirootfs-3.22.1-aarch64.tar.gz \/ # buildkit"},{"comment":"buildkit.dockerfile.v0","empty_layer":true,"created":"2025-07-15T11:01:16Z","created_by":"CMD [\"\/bin\/sh\"]"},{"comment":"buildkit.dockerfile.v0","empty_layer":true,"created":"2025-08-13T16:34:01Z","created_by":"LABEL maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>"},{"comment":"buildkit.dockerfile.v0","empty_layer":true,"created":"2025-08-13T16:34:01Z","created_by":"ENV NGINX_VERSION=1.29.1"},{"comment":"buildkit.dockerfile.v0","empty_layer":true,"created":"2025-08-13T16:34:01Z","created_by":"ENV PKG_RELEASE=1"},{"comment":"buildkit.dockerfile.v0","empty_layer":true,"created":"2025-08-13T16:34:01Z","created_by":"ENV DYNPKG_RELEASE=1"},{"comment":"buildkit.dockerfile.v0","created":"2025-08-13T16:34:01Z","created_by":"RUN \/bin\/sh -c set -x     && addgroup -g 101 -S nginx     && adduser -S -D -H -u 101 -h \/var\/cache\/nginx -s \/sbin\/nologin -G nginx -g nginx nginx     && apkArch=\"$(cat \/etc\/apk\/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             set -x             && KEY_SHA512=\"e09fa32f0a0eab2b879ccbbc4d0e4fb9751486eedda75e35fac65802cc9faa266425edf83e261137a2f4d16281ce2c1a5f4502930fe75154723da014214f0655\"             && wget -O \/tmp\/nginx_signing.rsa.pub https:\/\/nginx.org\/keys\/nginx_signing.rsa.pub             && if echo \"$KEY_SHA512 *\/tmp\/nginx_signing.rsa.pub\" | sha512sum -c -; then                 echo \"key verification succeeded!\";                 mv \/tmp\/nginx_signing.rsa.pub \/etc\/apk\/keys\/;             else                 echo \"key verification failed!\";                 exit 1;             fi             && apk add -X \"https:\/\/nginx.org\/packages\/mainline\/alpine\/v$(egrep -o \'^[0-9]+\\.[0-9]+\' \/etc\/alpine-release)\/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 bash                 alpine-sdk                 findutils                 curl             && su nobody -s \/bin\/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -L -O https:\/\/github.com\/nginx\/pkg-oss\/archive\/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"43ecd667d9039c9ab0fab9068c16b37825b15f7d4ef6ea8f36a41378bdf1a198463c751f8b76cfe2aef7ffa8dd9f88f180b958a8189d770258b5a97dc302daf4 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make base                 && apk index --allow-untrusted -o ${tempDir}\/packages\/alpine\/${apkArch}\/APKINDEX.tar.gz ${tempDir}\/packages\/alpine\/${apkArch}\/*.apk                 && abuild-sign -k ${tempDir}\/.abuild\/abuild-key.rsa ${tempDir}\/packages\/alpine\/${apkArch}\/APKINDEX.tar.gz                 \"             && cp ${tempDir}\/.abuild\/abuild-key.rsa.pub \/etc\/apk\/keys\/             && apk del --no-network .build-deps             && apk add -X ${tempDir}\/packages\/alpine\/ --no-cache $nginxPackages             ;;     esac     && apk del --no-network .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -f \"\/etc\/apk\/keys\/abuild-key.rsa.pub\" ]; then rm -f \/etc\/apk\/keys\/abuild-key.rsa.pub; fi     && apk add --no-cache gettext-envsubst     && apk add --no-cache tzdata     && ln -sf \/dev\/stdout \/var\/log\/nginx\/access.log     && ln -sf \/dev\/stderr \/var\/log\/nginx\/error.log     && mkdir \/docker-entrypoint.d # buildkit"},{"comment":"buildkit.dockerfile.v0","created":"2025-08-13T16:34:01Z","created_by":"COPY docker-entrypoint.sh \/ # buildkit"},{"comment":"buildkit.dockerfile.v0","created":"2025-08-13T16:34:01Z","created_by":"COPY 10-listen-on-ipv6-by-default.sh \/docker-entrypoint.d # buildkit"},{"comment":"buildkit.dockerfile.v0","created":"2025-08-13T16:34:01Z","created_by":"COPY 15-local-resolvers.envsh \/docker-entrypoint.d # buildkit"},{"comment":"buildkit.dockerfile.v0","created":"2025-08-13T16:34:01Z","created_by":"COPY 20-envsubst-on-templates.sh \/docker-entrypoint.d # buildkit"},{"comment":"buildkit.dockerfile.v0","created":"2025-08-13T16:34:01Z","created_by":"COPY 30-tune-worker-processes.sh \/docker-entrypoint.d # buildkit"},{"comment":"buildkit.dockerfile.v0","empty_layer":true,"created":"2025-08-13T16:34:01Z","created_by":"ENTRYPOINT [\"\/docker-entrypoint.sh\"]"},{"comment":"buildkit.dockerfile.v0","empty_layer":true,"created":"2025-08-13T16:34:01Z","created_by":"EXPOSE map[80\/tcp:{}]"},{"comment":"buildkit.dockerfile.v0","empty_layer":true,"created":"2025-08-13T16:34:01Z","created_by":"STOPSIGNAL SIGQUIT"},{"comment":"buildkit.dockerfile.v0","empty_layer":true,"created":"2025-08-13T16:34:01Z","created_by":"CMD [\"nginx\" \"-g\" \"daemon off;\"]"},{"comment":"buildkit.dockerfile.v0","empty_layer":true,"created":"2025-08-13T16:34:01Z","created_by":"ENV NJS_VERSION=0.9.1"},{"comment":"buildkit.dockerfile.v0","empty_layer":true,"created":"2025-08-13T16:34:01Z","created_by":"ENV NJS_RELEASE=1"},{"comment":"buildkit.dockerfile.v0","created":"2025-08-13T16:34:01Z","created_by":"RUN \/bin\/sh -c set -x     && apkArch=\"$(cat \/etc\/apk\/arch)\"     && nginxPackages=\"         nginx=${NGINX_VERSION}-r${PKG_RELEASE}         nginx-module-xslt=${NGINX_VERSION}-r${DYNPKG_RELEASE}         nginx-module-geoip=${NGINX_VERSION}-r${DYNPKG_RELEASE}         nginx-module-image-filter=${NGINX_VERSION}-r${DYNPKG_RELEASE}         nginx-module-njs=${NGINX_VERSION}.${NJS_VERSION}-r${NJS_RELEASE}     \"     && apk add --no-cache --virtual .checksum-deps         openssl     && case \"$apkArch\" in         x86_64|aarch64)             apk add -X \"https:\/\/nginx.org\/packages\/mainline\/alpine\/v$(egrep -o \'^[0-9]+\\.[0-9]+\' \/etc\/alpine-release)\/main\" --no-cache $nginxPackages             ;;         *)             set -x             && tempDir=\"$(mktemp -d)\"             && chown nobody:nobody $tempDir             && apk add --no-cache --virtual .build-deps                 gcc                 libc-dev                 make                 openssl-dev                 pcre2-dev                 zlib-dev                 linux-headers                 libxslt-dev                 gd-dev                 geoip-dev                 libedit-dev                 bash                 alpine-sdk                 findutils                 curl             && su nobody -s \/bin\/sh -c \"                 export HOME=${tempDir}                 && cd ${tempDir}                 && curl -f -L -O https:\/\/github.com\/nginx\/pkg-oss\/archive\/${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && PKGOSSCHECKSUM=\\\"43ecd667d9039c9ab0fab9068c16b37825b15f7d4ef6ea8f36a41378bdf1a198463c751f8b76cfe2aef7ffa8dd9f88f180b958a8189d770258b5a97dc302daf4 *${NGINX_VERSION}-${PKG_RELEASE}.tar.gz\\\"                 && if [ \\\"\\$(openssl sha512 -r ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz)\\\" = \\\"\\$PKGOSSCHECKSUM\\\" ]; then                     echo \\\"pkg-oss tarball checksum verification succeeded!\\\";                 else                     echo \\\"pkg-oss tarball checksum verification failed!\\\";                     exit 1;                 fi                 && tar xzvf ${NGINX_VERSION}-${PKG_RELEASE}.tar.gz                 && cd pkg-oss-${NGINX_VERSION}-${PKG_RELEASE}                 && cd alpine                 && make module-geoip module-image-filter module-njs module-xslt                 && apk index --allow-untrusted -o ${tempDir}\/packages\/alpine\/${apkArch}\/APKINDEX.tar.gz ${tempDir}\/packages\/alpine\/${apkArch}\/*.apk                 && abuild-sign -k ${tempDir}\/.abuild\/abuild-key.rsa ${tempDir}\/packages\/alpine\/${apkArch}\/APKINDEX.tar.gz                 \"             && cp ${tempDir}\/.abuild\/abuild-key.rsa.pub \/etc\/apk\/keys\/             && apk del --no-network .build-deps             && apk add -X ${tempDir}\/packages\/alpine\/ --no-cache $nginxPackages             ;;     esac     && apk del --no-network .checksum-deps     && if [ -n \"$tempDir\" ]; then rm -rf \"$tempDir\"; fi     && if [ -f \"\/etc\/apk\/keys\/abuild-key.rsa.pub\" ]; then rm -f \/etc\/apk\/keys\/abuild-key.rsa.pub; fi     && apk add --no-cache curl ca-certificates # buildkit"}]},"size":22938114,"platform":{"variant":"v8","architecture":"arm64","os":"linux"}}],"name":"docker.io\/library\/nginx:alpine"}]' 
    }));
    const images = ContainerCLI.listImages();
    expect(images.length).toBe(3);
  });
});